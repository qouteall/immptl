import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";import{o as m,c as k,b as n,d as s,a,w as e,e as c,r as u}from"./app.0c870a62.js";const h={},v=c('<h1 id="api-for-other-mods" tabindex="-1"><a class="header-anchor" href="#api-for-other-mods" aria-hidden="true">#</a> API for Other Mods</h1><p>The Fabric version of Immersive Portals mod contains some API for other mods to use.</p><h2 id="api-overview" tabindex="-1"><a class="header-anchor" href="#api-overview" aria-hidden="true">#</a> API Overview</h2><p>Start from mod version 5.0.0 (Mc version 1.20.4), this mod becomes one mod.</p><p>When the mod is only provided by jar-in-jar, the default config of &quot;nether portal mode&quot;, &quot;end portal mode&quot; and &quot;enable mirror creation&quot; will be respectively <code>vanilla</code>, <code>vanill</code> and false. This means that if this mod is only provided by jar-in-jar, and no existing mod config file exists, it will not change any existing vanilla behavior by default.</p>',5),b={href:"https://modrinth.com/mod/dimlib",target:"_blank",rel:"noopener noreferrer"},g=c('<details class="custom-container details"><summary>For MC 1.16 - 1.20.2</summary><p>Old versions of Immersive Portals mod&#39;s is split as 3 mods:</p><ul><li>Immersive Portals Core (<code>imm_ptl_core</code>). It allows adding and managing see-through portals. It also enables the client to load multiple dimensions at the same time. It also contains chunk loading facilities. It requires both client and server to install.</li><li>Miscellaneous Utility Library from qouteall (<code>q_misc_util</code>). It contains the dimension API and some utilities. It allows dynamically adding and removing dimensions without restarting the server. It can work as server-only (if the client does not install it, the command completion of dimension id won&#39;t be updated).</li><li>The outer mod. Contains nether portal, end portal and dimension stack functionality.</li></ul><p>Both <code>imm_ptl_core</code> and <code>q_misc_util</code> will not change vanilla behavior by default.</p></details>',1),y={href:"https://discord.gg/BZxgURK",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/iPortalTeam/ImmersivePortalsMod/discussions",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/iPortalTeam/MiniScaledMod",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/iPortalTeam/PortalGun",target:"_blank",rel:"noopener noreferrer"},P=n("h2",{id:"immersive-portals-api-imm-ptl-core",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#immersive-portals-api-imm-ptl-core","aria-hidden":"true"},"#"),s(" Immersive Portals API ("),n("code",null,"imm_ptl_core"),s(")")],-1),I=n("h3",{id:"create-a-portal",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#create-a-portal","aria-hidden":"true"},"#"),s(" Create a Portal")],-1),x=n("p",null,"Example:",-1),T=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"Portal"),s(" portal "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Portal"),n("span",{class:"token punctuation"},"."),s("entityType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),s("serverLevel"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOriginPos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDestinationDimension"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Level"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"NETHER"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDestination"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOrientationAndSize"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// axisW"),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// axisH"),s(`
    `),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// width"),s(`
    `),n("span",{class:"token number"},"4"),s(),n("span",{class:"token comment"},"// height"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"level"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addFreshEntity"),n("span",{class:"token punctuation"},"("),s("portal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"Portal"),s(" portal "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Portal"),n("span",{class:"token punctuation"},"."),s("entityType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),s("serverWorld"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOriginPos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3d"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDestinationDimension"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"World"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"NETHER"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setDestination"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3d"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"70"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOrientationAndSize"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3d"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// axisW"),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Vec3d"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// axisH"),s(`
    `),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// width"),s(`
    `),n("span",{class:"token number"},"4"),s(),n("span",{class:"token comment"},"// height"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
portal`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getWorld"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"spawnEntity"),n("span",{class:"token punctuation"},"("),s("portal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=c('<p>The portal can face any rotation, be anywhere, point to any position in any dimension.</p><p>It&#39;s recommended to check <a href="./Portal-Attributes">Portal Attributes</a> .</p><p><img src="https://i.loli.net/2021/11/20/XbnLyzM2pWOEIwl.png" alt=""></p><p><code>axisW</code> and <code>axisH</code> are unit vectors and should be perpendicular to each other. The portal orientation has nothing to do with pitch and yaw (because pitch and yaw cannot represent tilted rotations).</p><p><strong>If the portal attribute gets changed on the server side after the portal has spawned, call <code>portal.reloadAndSyncToClientNextTick()</code> to sync the changes to client.</strong></p><p>To create the reverse/flipped portal entity, use <code>PortalAPI.createReversePortal</code> <code>PortalAPI.createFlippedPortal</code> . <a href="./Portal-Customization#1-nether-portal--4-portal-entities">How bi-way portals and bi-faced portals are organized</a></p><h4 id="about-rotations-and-quaternions" tabindex="-1"><a class="header-anchor" href="#about-rotations-and-quaternions" aria-hidden="true">#</a> About Rotations and Quaternions</h4><p>You can set the portal&#39;s rotating transformation by <code>setRotation()</code> . The rotation transformation is represented using quaternion. Minecraft uses <code>Quaternionf</code> which is mutable. iPortal uess its own <code>DQuaternion</code> which is immutable.</p><p>A quaternion is a rotating transformation. For example you can create a rotation along Y axis for 45 degrees by <code>DQuaternion.rotateByDegrees(new Vec3(0, 1, 0), 45).toMcQuaternion()</code> .</p><p>About quaternions, you just need to know these:</p><ul><li>A quaternion can be seen as a unit 4D vector. If the 4D vector is not unit-length, it will not be a valid rotation.</li><li>Hamilton product combines two rotating transformations. <code>a.hamiltonProduct(b)</code> gives the rotation that firstly apply <code>b</code> and then <code>a</code> . The sequence matters.</li><li>Conjugate means getting the inverse rotation.</li><li>Having the 4 numbers negated does not change the corresponding rotation.</li><li>The quaternion can be interpolated on the 4D sphere surface.</li></ul><p>Quaternion can not only represent a rotating process, it can also represent an orientation. You can manipulate portal orientation by <code>PortalAPI.getPortalOrientationQuaternion</code> and <code>PortalAPI.setPortalOrientationQuaternion</code> .</p><p>iPortal does not use Euler angle for rotation because Euler angle requires handling many edge cases. Quaternion is less intuitive but easier to interpolate and multiply.</p><h4 id="creating-a-subclass-of-portal-and-a-new-entity-type" tabindex="-1"><a class="header-anchor" href="#creating-a-subclass-of-portal-and-a-new-entity-type" aria-hidden="true">#</a> Creating a Subclass of <code>Portal</code> and a New Entity Type</h4><p>For example, if you want to add a subclass of <code>Portal</code>: <code>XPortal</code></p>',15),C=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"XPortal"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Portal"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token class-name"},"EntityType"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token constant"},"ENTITY_TYPE"),s(),n("span",{class:"token operator"},"="),s(`
        `),n("span",{class:"token class-name"},"Portal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createPortalEntityType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EntityType"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},">")]),s(" entityType"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Level"),s(" world"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),s("entityType"),n("span",{class:"token punctuation"},","),s(" world"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"readAdditionalSaveData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"CompoundTag"),s(" compoundTag"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readAdditionalSaveData"),n("span",{class:"token punctuation"},"("),s("compoundTag"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// read custom data from nbt"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addAdditionalSaveData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"CompoundTag"),s(" compoundTag"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addAdditionalSaveData"),n("span",{class:"token punctuation"},"("),s("compoundTag"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// write custom data to nbt"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("p",null,"Then register the entity type during mod initialization:",-1),M=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"Registry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"register"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token class-name"},"BuiltInRegistries"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ENTITY_TYPE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ResourceLocation"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"x:x"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ENTITY_TYPE"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("p",null,"Also register the entity renderer, during client side mod initialization:",-1),D=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"EntityRendererRegistry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"register"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ENTITY_TYPE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"PortalEntityRenderer"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),L=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"XPortal"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Portal"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token class-name"},"EntityType"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token constant"},"ENTITY_TYPE"),s(),n("span",{class:"token operator"},"="),s(`
        `),n("span",{class:"token class-name"},"Portal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createPortalEntityType"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EntityType"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},">")]),s(" entityType"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"World"),s(" world"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"("),s("entityType"),n("span",{class:"token punctuation"},","),s(" world"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"readCustomDataFromNbt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"NbtCompound"),s(" compoundTag"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readCustomDataFromNbt"),n("span",{class:"token punctuation"},"("),s("compoundTag"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// read custom data from nbt"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"writeCustomDataToNbt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"NbtCompound"),s(" compoundTag"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"writeCustomDataToNbt"),n("span",{class:"token punctuation"},"("),s("compoundTag"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// write custom data to nbt"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("p",null,"Then register the entity type during mod initialization:",-1),Y=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"Registry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"register"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token class-name"},"Registries"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ENTITY_TYPE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Identifier"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"x:x"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ENTITY_TYPE"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=n("p",null,"Also register the entity renderer, during client side mod initialization:",-1),O=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"EntityRendererRegistry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"register"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"XPortal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ENTITY_TYPE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"PortalEntityRenderer"),n("span",{class:"token operator"},"::"),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=n("h3",{id:"chunk-loading-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#chunk-loading-api","aria-hidden":"true"},"#"),s(" Chunk Loading API")],-1),B=n("p",null,"Vanilla has the force-load functionality but it only loads the chunk and does not synchronize the chunk to player client. This mod supports loading chunks and synchronize the chunk (blocks, entities, etc.) to the specific player.",-1),z=n("p",null,"Example:",-1),W=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"ChunkLoader"),s(" chunkLoader "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ChunkLoader"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"DimensionalChunkPos"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token class-name"},"Level"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"OVERWORLD"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// chunk x"),s(`
        `),n("span",{class:"token number"},"100"),s(),n("span",{class:"token comment"},"// chunk z"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token number"},"3"),s(),n("span",{class:"token comment"},"// radius in chunks"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"PortalAPI"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addChunkLoaderForPlayer"),n("span",{class:"token punctuation"},"("),s("serverPlayer"),n("span",{class:"token punctuation"},","),s(" chunkLoader"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"ChunkLoader"),s(" chunkLoader "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ChunkLoader"),n("span",{class:"token punctuation"},"("),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"DimensionalChunkPos"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token class-name"},"World"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"OVERWORLD"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token number"},"100"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// chunk x"),s(`
        `),n("span",{class:"token number"},"100"),s(),n("span",{class:"token comment"},"// chunk z"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token number"},"3"),s(),n("span",{class:"token comment"},"// radius in chunks"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"PortalAPI"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addChunkLoaderForPlayer"),n("span",{class:"token punctuation"},"("),s("serverPlayer"),n("span",{class:"token punctuation"},","),s(" chunkLoader"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=c('<p>After adding the chunk loader, you probably need to store the <code>ChunkLoader</code> object reference, and call <code>removeChunkLoaderForPlayer</code> when you want to stop loading (Note: in the latest version, it removes chunk loader by reference, not value).</p><h3 id="access-multiple-client-worlds" tabindex="-1"><a class="header-anchor" href="#access-multiple-client-worlds" aria-hidden="true">#</a> Access Multiple Client Worlds</h3><p>This mod eliminates the limitation that only one dimension can be loaded on client at the same time. If you want to get the nether world, use <code>ClientWorldLoader.getWorld(Level.NETHER)</code> . The client world will be created when it&#39;s used at the first time.</p><p>If the client experiences conventional dimension change (with loading screen) then all worlds will be unloaded and recreated later.</p><h3 id="gui-portal" tabindex="-1"><a class="header-anchor" href="#gui-portal" aria-hidden="true">#</a> GUI Portal</h3><p>Use <code> GuiPortalRendering.submitNextFrameRendering(worldRenderInfo, frameBuffer)</code> to ask it to render the world into the framebuffer in the next frame. The rendered dimension, position, camera transformation can be specified in the <code>WorldRenderInfo</code>.</p><p>That framebuffer will automatically be resized to be the same size as the game window.</p>',7),X={href:"https://github.com/iPortalTeam/ImmersivePortalsMod/blob/1.20.2/imm_ptl_core/src/main/java/qouteall/imm_ptl/core/api/example/ExampleGuiPortalRendering.java",target:"_blank",rel:"noopener noreferrer"},H=c(`<p><img src="https://i.loli.net/2021/06/07/AKBYLdxikuEUR6o.png" alt=""></p><h3 id="networking-utility-remote-procedure-call" tabindex="-1"><a class="header-anchor" href="#networking-utility-remote-procedure-call" aria-hidden="true">#</a> Networking Utility (Remote Procedure Call)</h3><p>The remote procedure call utility allows easier networking communication (without writing packet type and serialization/deserialization code for eacy packet type).</p><p>Example: if you want the server to send a packet to ask the client to invoke this method (on the render thread):</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AAARemoteCallableBBB</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">clientMethod</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg1<span class="token punctuation">,</span> <span class="token keyword">double</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Do this</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">McRemoteProcedureCall</span><span class="token punctuation">.</span><span class="token function">tellClientToInvoke</span><span class="token punctuation">(</span>
    player<span class="token punctuation">,</span>
    <span class="token string">&quot;path.to.the_class.AAARemoteCallableBBB.clientMethod&quot;</span><span class="token punctuation">,</span>
    <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4.5</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want the client to send a packet to ask the server to invoke this method (on the server thread):</p>`,8),J=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AAARemoteCallableBBB"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"serverMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServerPlayer"),s(" player"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Block"),s(" arg1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AAARemoteCallableBBB"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"serverMethod"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServerPlayerEntity"),s(" player"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Block"),s(" arg1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=c(`<p>Do this</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">McRemoteProcedureCall</span><span class="token punctuation">.</span><span class="token function">tellServerToInvoke</span><span class="token punctuation">(</span>
    <span class="token string">&quot;path.to.the_class.AAARemoteCallableBBB.serverMethod&quot;</span><span class="token punctuation">,</span>
    <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For security concerns, the invoked method&#39;s class path must contain &quot;RemoteCallable&quot;. For example, the class name can be &quot;XXRemoteCallableYYY&quot; or &quot;RemoteCallables&quot;.</p><p>The supported argument types are</p><ul><li>The types that Gson can directly serialize/deserialize, including <code>int</code>, <code>double</code>, <code>boolean</code>, <code>long</code>, <code>String</code>, <code>int[]</code>, <code>Map&lt;String,String&gt;</code>, Enums, Plain old java objects</li></ul><p>and:</p>`,6),G=n("ul",null,[n("li",null,[n("code",null,"ResourceLocation"),s(", "),n("code",null,"ResourceKey<Level>"),s(", "),n("code",null,"ResourceKey<Biome>"),s(", "),n("code",null,"BlockPos"),s(", "),n("code",null,"Vec3"),s(", "),n("code",null,"UUID"),s(", "),n("code",null,"Block"),s(", "),n("code",null,"Item"),s(", "),n("code",null,"BlockState"),s(", "),n("code",null,"ItemStack"),s(", "),n("code",null,"CompoundTag"),s(", "),n("code",null,"Component")])],-1),Q=n("ul",null,[n("li",null,[n("code",null,"Identifier"),s(", "),n("code",null,"RegistryKey<World>"),s(", "),n("code",null,"RegistryKey<Biome>"),s(", "),n("code",null,"BlockPos"),s(", "),n("code",null,"Vec3d"),s(", "),n("code",null,"UUID"),s(", "),n("code",null,"Block"),s(", "),n("code",null,"Item"),s(", "),n("code",null,"BlockState"),s(", "),n("code",null,"ItemStack"),s(", "),n("code",null,"CompoundTag"),s(", "),n("code",null,"Text")])],-1),Z=n("p",null,"Using unsupported argument types will cause serialization/deserialization issues.",-1),$=n("p",null,[n("strong",null,"Note: the packet handling code should validate packet content, including checking permission and checking position.")],-1),nn=n("h2",{id:"how-to-make-other-mod-s-portals-see-through",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-make-other-mod-s-portals-see-through","aria-hidden":"true"},"#"),s(" How to Make Other Mod's Portals See-through")],-1),sn={href:"https://github.com/devs-immortal/Paradise-Lost/blob/1.18.2/src/main/resources/data/the_aether/custom_portal_generation/ip_aether_portal.json",target:"_blank",rel:"noopener noreferrer"},an=n("p",null,"It converts when after the player goes through portal once. The portal is not converted when lighting the portal because iPortal didn't know how to select the destination and generate the frame, until the player goes through the portal once.",-1),en=n("h2",{id:"configure-dependency-in-fabric",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#configure-dependency-in-fabric","aria-hidden":"true"},"#"),s(" Configure Dependency in Fabric")],-1),tn=n("p",null,[s("In your "),n("code",null,"build.gradle"),s(":")],-1),on=n("p",null,[s("Add this into "),n("code",null,"repositories")],-1),ln=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`// the repository for iPortal
maven { url 'https://jitpack.io' }

// the repository for Cloth Config
maven { url 'https://maven.shedaniel.me' }
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=n("p",null,[s("Add this into "),n("code",null,"dependencies")],-1),pn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`modImplementation ("com.github.iPortalTeam:ImmersivePortalsMod:v5.0.0-mc1.20.4")
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),un=n("code",null,"v5.0.0-mc1.20.4",-1),rn={href:"https://github.com/iPortalTeam/ImmersivePortalsMod/tags",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://jitpack.io/#iPortalTeam/ImmersivePortalsMod",target:"_blank",rel:"noopener noreferrer"},mn=n("p",null,[s("JitPack will build it when you firstly use it. If you encounter "),n("code",null,"Read time out"),s(", it means that JitPack haven't finished building it yet, simply try again.")],-1),kn=n("p",null,[s("Add this into "),n("code",null,"repositories")],-1),hn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`// the repository for iPortal
maven { url 'https://jitpack.io' }

// the repository for Cloth Config
maven { url 'https://maven.shedaniel.me' }
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),vn=n("p",null,[s("Add this into "),n("code",null,"dependencies")],-1),bn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:v3.2.1-mc1.20.1")
modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:v3.2.1-mc1.20.1")
modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:build:v3.2.1-mc1.20.1")
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),gn=n("code",null,"v3.2.1-mc1.20.1",-1),yn={href:"https://github.com/iPortalTeam/ImmersivePortalsMod/tags",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://jitpack.io/#iPortalTeam/ImmersivePortalsMod",target:"_blank",rel:"noopener noreferrer"},_n=n("p",null,[s("JitPack will build it when you firstly use it. If you encounter "),n("code",null,"Read time out"),s(", it means that JitPack haven't finished building it yet, simply try again.")],-1),wn=n("p",null,[s("Add this into "),n("code",null,"repositories")],-1),Pn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`// the repository for ImmPtl
maven { url 'https://jitpack.io' }

// the repository for Cloth Config
maven { url 'https://maven.shedaniel.me' }
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),In=n("p",null,[s("Add this into "),n("code",null,"dependencies")],-1),xn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`// Dependency of Immersive Portals Core:
modImplementation ('com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:v2.3.1-1.19'){
	exclude(group: "net.fabricmc.fabric-api")
	transitive(false)
}

// Dependency of the Miscellaneous Utility Library from qouteall
modImplementation ('com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:v2.3.1-1.19'){
	exclude(group: "net.fabricmc.fabric-api")
	transitive(false)
}

// Cloth config (dependency of ImmPtl)
modImplementation("me.shedaniel.cloth:cloth-config-fabric:\${cloth_config_version}") {
    exclude(group: "net.fabricmc.fabric-api")
}

// If you want the outer Immersive Portals mod (This is usually not needed)
modImplementation ('com.github.iPortalTeam.ImmersivePortalsMod:build:v2.3.1-1.19'){
	exclude(group: "net.fabricmc.fabric-api")
	transitive(false)
}
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Tn=n("code",null,"v2.3.1-1.19",-1),An={href:"https://jitpack.io/#qouteall/ImmersivePortalsMod",target:"_blank",rel:"noopener noreferrer"},En=n("p",null,[s("JitPack will build it when you firstly use it. If you encounter "),n("code",null,"Read time out"),s(", it means that JitPack haven't finished building it yet, simply try again.")],-1),Cn={href:"https://github.com/LlamaLad7/MixinExtras",target:"_blank",rel:"noopener noreferrer"},jn=n("code",null,"dependencies",-1),Mn=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,`api("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
annotationProcessor("com.github.LlamaLad7:MixinExtras:0.2.0-beta.4")
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Rn=c('<h2 id="possible-sources-of-mod-incompatibility-with-immersive-portals" tabindex="-1"><a class="header-anchor" href="#possible-sources-of-mod-incompatibility-with-immersive-portals" aria-hidden="true">#</a> Possible Sources of Mod Incompatibility with Immersive Portals</h2><p>Immersive Portals mod deeply changes game mechanics and eliminated a lot of vanilla restrictions, so it may be incompatible with some mods in these ways:</p><p><strong>The mod that&#39;s developed based on the fact that only one dimension is loaded on client may be incompatible with ImmPtl.</strong></p><p>The latest version of ImmPtl does not change the player&#39;s dimension, so the mod can compare the <code>Level</code> with <code>player.level()</code> to know whether it&#39;s rendering or ticking the dimension that the player is not in.</p><p>For the mods that store per-dimension data on client, making the data attached to <code>Level</code>(<code>World</code>) or <code>LevelRenderer</code> (<code>WorldRenderer</code>) may solve the issue.</p>',5),Dn=n("code",null,"Level",-1),Ln={href:"https://github.com/Ladysnake/Cardinal-Components-API",target:"_blank",rel:"noopener noreferrer"},Sn=n("h2",{id:"dimension-api-in-dimlib",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dimension-api-in-dimlib","aria-hidden":"true"},"#"),s(" Dimension API in DimLib")],-1),Yn=n("code",null,"q_misc_util",-1),Nn={href:"https://github.com/iPortalTeam/DimLib",target:"_blank",rel:"noopener noreferrer"},On=n("h4",{id:"dynamically-adding-and-removing-dimensions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dynamically-adding-and-removing-dimensions","aria-hidden":"true"},"#"),s(" Dynamically Adding and Removing Dimensions")],-1),qn=n("p",null,"Add and remove a new dimension dynamically:",-1),Bn=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"MinecraftServer"),s(" server "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},[s("RegistryAccess"),n("span",{class:"token punctuation"},"."),s("Frozen")]),s(" registryAccess "),n("span",{class:"token operator"},"="),s(" server"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"registryAccess"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"Registry"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"DimensionType"),n("span",{class:"token punctuation"},">")]),s(" dimTypeRegistry "),n("span",{class:"token operator"},"="),s(`
    registryAccess`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"registryOrThrow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Registries"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DIMENSION_TYPE"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// get the dimension type holder"),s(`
`),n("span",{class:"token class-name"},"Holder"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"DimensionType"),n("span",{class:"token punctuation"},">")]),s(" dimType "),n("span",{class:"token operator"},"="),s(" dimTypeRegistry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHolder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"DIM_TYPE_KEY"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"orElseThrow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// add the dimension"),s(`
`),n("span",{class:"token class-name"},"DimensionAPI"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addDimension"),n("span",{class:"token punctuation"},"("),s(`
    server`),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ResourceLocation"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"namespace:new_dimension_id"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LevelStem"),n("span",{class:"token punctuation"},"("),s(`
        dimType`),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"CustomChunkGenerator"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// ..."),s(`

`),n("span",{class:"token comment"},"// remove the dimension"),s(`
`),n("span",{class:"token class-name"},"DimensionAPI"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeDimensionDynamically"),n("span",{class:"token punctuation"},"("),s("server"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getLevel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"DIM_KEY"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),zn=n("div",{class:"language-java ext-java line-numbers-mode"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"MinecraftServer"),s(" server "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},[s("DynamicRegistryManager"),n("span",{class:"token punctuation"},"."),s("Immutable")]),s(" registryAccess "),n("span",{class:"token operator"},"="),s(" server"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getRegistryManager"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"Registry"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"DimensionType"),n("span",{class:"token punctuation"},">")]),s(" dimTypeRegistry "),n("span",{class:"token operator"},"="),s(`
    registryAccess`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"RegistryKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DIMENSION_TYPE"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// get the dimension type holder"),s(`
`),n("span",{class:"token class-name"},"RegistryEntry"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"DimensionType"),n("span",{class:"token punctuation"},">")]),s(" dimType "),n("span",{class:"token operator"},"="),s(" dimTypeRegistry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getEntry"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"DIM_TYPE_KEY"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"orElseThrow"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// add the dimension"),s(`
`),n("span",{class:"token class-name"},"DimensionAPI"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addDimension"),n("span",{class:"token punctuation"},"("),s(`
    server`),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Identifier"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"namespace:new_dimension_id"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"DimensionOptions"),n("span",{class:"token punctuation"},"("),s(`
        dimType`),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"CustomChunkGenerator"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// ..."),s(`

`),n("span",{class:"token comment"},"// remove the dimension"),s(`
`),n("span",{class:"token class-name"},"DimensionAPI"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeDimensionDynamically"),n("span",{class:"token punctuation"},"("),s("server"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getWorld"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"DIM_KEY"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Wn=c(`<p>When creating a new <code>ChunkGenerator</code>, you can use the content from the <code>RegistryAccess</code>. The added dimension&#39;s configuration will be saved into <code>level.dat</code> file. The chunk generator need to have a working codec.</p><p>The added dimension&#39;s id should not duplicate with existing dimension. You can use <code>DimensionAPI.addDimensionIfNotExists</code> to avoid adding dimension if the dimension with that id already exists.</p><p>Removing a dimension does not delete its world saving file.</p><h4 id="adding-dimensions-during-server-initialization" tabindex="-1"><a class="header-anchor" href="#adding-dimensions-during-server-initialization" aria-hidden="true">#</a> Adding Dimensions During Server Initialization</h4><p>Sometimes you want to add a new dimension during server startup, but want to add dimension based on config file or some other dynamic things, so the dimension cannot be hardcoded in JSON, then you can do this:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token constant">SERVER_DIMENSIONS_LOAD_EVENT</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>server <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">addDimensionIfNotExists</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="register-codec-for-custom-chunk-generator" tabindex="-1"><a class="header-anchor" href="#register-codec-for-custom-chunk-generator" aria-hidden="true">#</a> Register Codec for Custom Chunk Generator</h4><p>TODO</p>`,8);function Vn(Fn,Xn){const t=u("ExternalLinkIcon"),p=u("Tabs"),r=u("RouterLink");return m(),k("div",null,[v,n("p",null,[s("The dimension API now has been moved to "),n("a",b,[s("DimLib"),a(t)]),s(".")]),g,n("p",null,[s("Here is the brief documentation of the API. You can also refer to the JavaDoc in code. If you have any question using the API, you can contact qouteall via "),n("a",y,[s("discord"),a(t)]),s(" or open a "),n("a",f,[s("discussion"),a(t)]),s(".")]),n("p",null,[s("Code examples: "),n("a",_,[s("MiniScaled mod"),a(t)]),s(" and "),n("a",w,[s("Portal Gun mod"),a(t)]),s(" use Immersive Portals API.")]),P,I,x,a(p,{data:[{title:"Official Mapping"},{title:"Yarn Mapping"}]},{tab0:e(({title:o,value:i,isActive:l})=>[T]),tab1:e(({title:o,value:i,isActive:l})=>[A]),_:1}),E,a(p,{data:[{title:"Official Mapping"},{title:"Yarn Mapping"}]},{tab0:e(({title:o,value:i,isActive:l})=>[C,j,M,R,D]),tab1:e(({title:o,value:i,isActive:l})=>[L,S,Y,N,O]),_:1}),q,B,z,a(p,{data:[{title:"Official Mapping"},{title:"Yarn Mapping"}]},{tab0:e(({title:o,value:i,isActive:l})=>[W]),tab1:e(({title:o,value:i,isActive:l})=>[V]),_:1}),F,n("p",null,[n("a",X,[s("Example"),a(t)])]),H,a(p,{data:[{title:"Official Mapping"},{title:"Yarn Mapping"}]},{tab0:e(({title:o,value:i,isActive:l})=>[J]),tab1:e(({title:o,value:i,isActive:l})=>[U]),_:1}),K,a(p,{data:[{title:"Official Mapping"},{title:"Yarn Mapping"}]},{tab0:e(({title:o,value:i,isActive:l})=>[G]),tab1:e(({title:o,value:i,isActive:l})=>[Q]),_:1}),Z,$,nn,n("p",null,[s("Immersive Portals' datapack-custom-portal system allows converting a conventional portal (a portal that is similar to nether portal, for example the portal of Paradise Lost) to see-through when the player goes through the portal. That JSON file can be directly put into the mod jar. "),n("a",sn,[s("Example in Paradise Lost mod"),a(t)]),s(". If the mod author did not put the conversion generation file into the mod jar, you can also use your own datapack to add it.")]),an,en,tn,a(p,{data:[{title:"MC 1.20.4 +"},{title:"MC 1.20.1 - MC 1.20.2"},{title:"older"}]},{tab0:e(({title:o,value:i,isActive:l})=>[on,ln,cn,pn,n("p",null,[s("Replace "),un,s(" with the "),n("a",rn,[s("latest release tag"),a(t)]),s(". See "),n("a",dn,[s("Jitpack"),a(t)])]),mn]),tab1:e(({title:o,value:i,isActive:l})=>[kn,hn,vn,bn,n("p",null,[s("Replace "),gn,s(" with the "),n("a",yn,[s("latest release tag"),a(t)]),s(". See "),n("a",fn,[s("Jitpack"),a(t)])]),_n]),tab2:e(({title:o,value:i,isActive:l})=>[wn,Pn,In,xn,n("p",null,[s("You need to change the version "),Tn,s(" to the latest version. See "),n("a",An,[s("Jitpack"),a(t)])]),En,n("p",null,[n("strong",null,[s("Starting from MC 1.19.4, ImmPtl depends on "),n("a",Cn,[s("MixinExtras"),a(t)]),s(".")]),s(" MixinExtras is an extension for Mixin that provide ways to transform game code in more flexible and more mod-compatible ways. You need to add MixinExtras in "),jn,s(":")]),Mn]),_:1},8,["data"]),Rn,n("p",null,[s('The networking packets to client does not include the dimension information, so ImmPtl wraps some packets as "redirected packet" to attach dimension information. For the mods that send synchronization packets to client, for example, sending packets to synchronize custom data of entity or block entity, it may fail to find the entity or block entity in the current '),Dn,s(" because that packet is not redirected. The mod can choose to use "),n("a",Ln,[s("Cardinal Components"),a(t)]),s(" to sync the additional data (ImmPtl has special code to make Cardinal Components packet redirected).")]),Sn,n("p",null,[s("Before mod version 5.0.0 (MC version 1.20.4), the dimension API is in "),Yn,s(". The documentation of the dimension API of old versions is "),a(r,{to:"/wiki/Old-API.html"},{default:e(()=>[s("here")]),_:1}),s(".")]),n("p",null,[s("Not the dimension API is in "),n("a",Nn,[s("DimLib"),a(t)]),s(".")]),On,qn,a(p,{data:[{title:"Official Mapping"},{title:"Yarn Mapping"}]},{tab0:e(({title:o,value:i,isActive:l})=>[Bn]),tab1:e(({title:o,value:i,isActive:l})=>[zn]),_:1}),Wn])}var Un=d(h,[["render",Vn],["__file","API-for-Other-Mods.html.vue"]]);export{Un as default};
