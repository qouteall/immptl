import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.0c870a62.js";const t={},p=e(`<h1 id="api-for-other-mods-old-version" tabindex="-1"><a class="header-anchor" href="#api-for-other-mods-old-version" aria-hidden="true">#</a> API for Other Mods (old version)</h1><p>These are the documentation for the APIs in older versions. Supporting old versions is in low priority. It&#39;s recommended to use the latest version of iPortal and q_misc_util.</p><p>Code is in yarn mapping.</p><p>The content in this page is outdated.</p><h3 id="dimension-api-in-mc-1-20-2" tabindex="-1"><a class="header-anchor" href="#dimension-api-in-mc-1-20-2" aria-hidden="true">#</a> Dimension API in MC 1.20.2</h3><p>The dimension API in 1.20.2 is in <code>q_misc_util</code>. It&#39;s roughly the same as the dimension API in DimLib.</p><h3 id="dimension-api-in-mc-1-20-1" tabindex="-1"><a class="header-anchor" href="#dimension-api-in-mc-1-20-1" aria-hidden="true">#</a> Dimension API in MC 1.20.1</h3><h4 id="basic-concepts-of-dimensions" tabindex="-1"><a class="header-anchor" href="#basic-concepts-of-dimensions" aria-hidden="true">#</a> Basic Concepts of Dimensions</h4><p>Minecraft allows defining dimension types, biomes and other things via datapacks. Fabric will turn mod files in <code>resources</code> into virtual datapacks.</p><p>You can get a <code>DynamicRegistryManager</code> from a server, then you can get the dimension type registry from the registry manager, and then you can get the dimension type from the dimension type registry.</p><p>A dimension consists of:</p><ul><li>A dimension id (Its type is <code>RegistryKey&lt;World&gt;</code>. An <code>Identifier</code> can be converted to <code>RegistryKey&lt;World&gt;</code>)</li><li>A dimension type. It defines the world height, skylight and other properties. (You can define your dimension types in json files. Then you can get it from the <code>DynamicRegistryManager</code>)</li><li>A chunk generator. It does world generation of that dimension. To create the chunk generator, you probably need to access the registries to get the biomes and other things via <code>DynamicRegistryManager</code>.</li></ul><p>A <code>DimensionOptions</code> contains a dimension type <code>RegistryEntry</code> and a chunk generator.</p><p>In Mojang mapping, <code>DynamicRegistryManager</code> is <code>RegistryAccess</code>, <code>RegistryKey</code> is <code>ResourceKey</code>, <code>DimensionOptions</code> is <code>WorldStem</code>, <code>GeneratorOptions</code> is <code>WorldGenSettings</code>, <code>RegistryEntry</code> is <code>Holder</code>, <code>Identifier</code> is <code>ResourceLocation</code>.</p><h4 id="dynamically-adding-and-removing-dimensions" tabindex="-1"><a class="header-anchor" href="#dynamically-adding-and-removing-dimensions" aria-hidden="true">#</a> Dynamically Adding and Removing Dimensions</h4><p>The Dimension API supports dynamically adding and removing dimensions when the server is running.</p><p>Add a new dimension dynamically:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DynamicRegistryManager</span> manager <span class="token operator">=</span> <span class="token class-name">MiscHelper</span><span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRegistryManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// get the dimension type</span>
<span class="token class-name">RegistryEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DimensionType</span><span class="token punctuation">&gt;</span></span> dimensionType <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span>
    <span class="token class-name">RegistryKey</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">DIMENSION_TYPE_KEY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_type_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// add the dimension</span>
<span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">addDimensionDynamically</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:new_dimension_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">DimensionOptions</span><span class="token punctuation">(</span>
        dimensionType<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">CustomChunkGenerator</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That code will add the new dimension to the server world map and send dimension sync packets to client. You should not do this during server initialization.</p><p>When the server restarts, the dynamically added dimension will vanish. To make sure that dynamically added dimensions are still present when the server restarts, you need to save the dimension configuration:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">RegistryKey</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">World</span><span class="token punctuation">&gt;</span></span> dimId <span class="token operator">=</span> <span class="token class-name">RegistryKey</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">WORLD_KEY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:new_dimension_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">saveDimensionConfiguration</span><span class="token punctuation">(</span>dimId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then it will save the configuration as a json file in the folder <code>q_dimension_configs</code> in the world saving.</p><p>Remove a dimension dynamically:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">RegistryKey</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">World</span><span class="token punctuation">&gt;</span></span> dimId <span class="token operator">=</span> <span class="token class-name">RegistryKey</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">WORLD_KEY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:new_dimension_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">ServerWorld</span> world <span class="token operator">=</span> <span class="token class-name">MiscHelper</span><span class="token punctuation">.</span><span class="token function">getServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWorld</span><span class="token punctuation">(</span>dimId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">removeDimensionDynamically</span><span class="token punctuation">(</span>world<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That code will remove the dimension from the server world map and send sync packets to client. This will not delete the world saving (blocks, entities) of that dimension. If you re-add the dimension, the blocks and entities will still be there.</p><p>If you saved that dimension&#39;s configuration, you need to delete the configuration:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">deleteDimensionConfiguration</span><span class="token punctuation">(</span>dimId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>NOTE: currently the saved extra dimension configurations won&#39;t be updated by DFU. It means that if that dimension&#39;s chunk generator uses vanilla data formats and the format changes, the dimension will fail to load. The world data of that dimension won&#39;t be lost.</strong></p><h4 id="add-dimension-during-server-startup" tabindex="-1"><a class="header-anchor" href="#add-dimension-during-server-startup" aria-hidden="true">#</a> Add dimension during server startup:</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span>serverDimensionsLoadEvent<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">(</span>generatorOptions<span class="token punctuation">,</span> registryManager<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">Registry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DimensionOptions</span><span class="token punctuation">&gt;</span></span> registry <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">RegistryKeys</span><span class="token punctuation">.</span><span class="token constant">DIMENSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// get the dimension type</span>
    <span class="token class-name">RegistryEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DimensionType</span><span class="token punctuation">&gt;</span></span> dimType <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">DIMENSION_TYPE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span>
        <span class="token class-name">RegistryKey</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">DIMENSION_TYPE_KEY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_type_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Missing dimension type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token class-name">Identifier</span> dimId <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// get the biome registry for initializing the biome source</span>
    <span class="token class-name">Registry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Biome</span><span class="token punctuation">&gt;</span></span> biomeRegistry <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">BIOME_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BiomeSource</span> biomeSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomBiomeSource</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> biomeRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token comment">// add the dimension</span>
    <span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">addDimension</span><span class="token punctuation">(</span>
        registry<span class="token punctuation">,</span> dimId<span class="token punctuation">,</span> dimType<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">CustomChunkGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dimension-api-in-1-18-2-and-1-19-2" tabindex="-1"><a class="header-anchor" href="#dimension-api-in-1-18-2-and-1-19-2" aria-hidden="true">#</a> Dimension API In 1.18.2 and 1.19.2:</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span>serverDimensionsLoadEvent<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">(</span>generatorOptions<span class="token punctuation">,</span> registryManager<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">Registry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DimensionOptions</span><span class="token punctuation">&gt;</span></span> registry <span class="token operator">=</span> generatorOptions<span class="token punctuation">.</span><span class="token function">getDimensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// get the dimension type</span>
    <span class="token class-name">RegistryEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DimensionType</span><span class="token punctuation">&gt;</span></span> dimType <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">DIMENSION_TYPE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span>
        <span class="token class-name">RegistryKey</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">DIMENSION_TYPE_KEY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_type_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Missing dimension type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token class-name">Identifier</span> dimId <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// get the biome registry for initializing the biome source</span>
    <span class="token class-name">Registry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Biome</span><span class="token punctuation">&gt;</span></span> biomeRegistry <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">BIOME_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BiomeSource</span> biomeSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomBiomeSource</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> biomeRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token comment">// add the dimension</span>
    <span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">addDimension</span><span class="token punctuation">(</span>
        registry<span class="token punctuation">,</span> dimId<span class="token punctuation">,</span> dimType<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">CustomChunkGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// mark it non-persistent so it won&#39;t be saved into level.dat. (This is not needed in 1.19)</span>
    <span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">markDimensionNonPersistent</span><span class="token punctuation">(</span>dimId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dimension-api-in-1-17-1-and-1-18-1" tabindex="-1"><a class="header-anchor" href="#dimension-api-in-1-17-1-and-1-18-1" aria-hidden="true">#</a> Dimension API In 1.17.1 and 1.18.1:</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span>serverDimensionsLoadEvent<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">(</span>generatorOptions<span class="token punctuation">,</span> registryManager<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">SimpleRegistry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DimensionOptions</span><span class="token punctuation">&gt;</span></span> registry <span class="token operator">=</span> generatorOptions<span class="token punctuation">.</span><span class="token function">getDimensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> seed <span class="token operator">=</span> generatorOptions<span class="token punctuation">.</span><span class="token function">getSeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// get the dimension type</span>
    <span class="token class-name">DimensionType</span> dimensionType <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">DIMENSION_TYPE_KEY</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_type_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Validate</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>dimensionType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// get the biome registry for initializing the biome source</span>
    <span class="token class-name">MutableRegistry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Biome</span><span class="token punctuation">&gt;</span></span> biomeRegistry <span class="token operator">=</span> registryManager<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Registry</span><span class="token punctuation">.</span><span class="token constant">BIOME_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BiomeSource</span> biomeSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomBiomeSource</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> biomeRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// directly register the dimension</span>
    <span class="token class-name">Identifier</span> dimensionId <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Identifier</span><span class="token punctuation">(</span><span class="token string">&quot;namespace:dimension_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">addDimension</span><span class="token punctuation">(</span>
        seed<span class="token punctuation">,</span> registry<span class="token punctuation">,</span> dimensionId<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> dimensionType<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">CustomChunkGenerator</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> biomeSource<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// mark it non-persistent so it won&#39;t be saved into level.dat</span>
    <span class="token class-name">DimensionAPI</span><span class="token punctuation">.</span><span class="token function">markDimensionNonPersistent</span><span class="token punctuation">(</span>dimensionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),o=[p];function i(c,l){return s(),a("div",null,o)}var r=n(t,[["render",i],["__file","Old-API.html.vue"]]);export{r as default};
